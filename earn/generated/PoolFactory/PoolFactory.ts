// THIS IS AN AUTOGENERATED FILE. DO NOT EDIT THIS FILE DIRECTLY.

import {
  ethereum,
  JSONValue,
  TypedMap,
  Entity,
  Bytes,
  Address,
  BigInt
} from "@graphprotocol/graph-ts";

export class CurrencySet extends ethereum.Event {
  get params(): CurrencySet__Params {
    return new CurrencySet__Params(this);
  }
}

export class CurrencySet__Params {
  _event: CurrencySet;

  constructor(event: CurrencySet) {
    this._event = event;
  }

  get currency(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._event.parameters[1].value.toBoolean();
  }
}

export class Initialized extends ethereum.Event {
  get params(): Initialized__Params {
    return new Initialized__Params(this);
  }
}

export class Initialized__Params {
  _event: Initialized;

  constructor(event: Initialized) {
    this._event = event;
  }

  get version(): i32 {
    return this._event.parameters[0].value.toI32();
  }
}

export class InsuranceFactorSet extends ethereum.Event {
  get params(): InsuranceFactorSet__Params {
    return new InsuranceFactorSet__Params(this);
  }
}

export class InsuranceFactorSet__Params {
  _event: InsuranceFactorSet;

  constructor(event: InsuranceFactorSet) {
    this._event = event;
  }

  get factor(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class InterestRateModelSet extends ethereum.Event {
  get params(): InterestRateModelSet__Params {
    return new InterestRateModelSet__Params(this);
  }
}

export class InterestRateModelSet__Params {
  _event: InterestRateModelSet;

  constructor(event: InterestRateModelSet) {
    this._event = event;
  }

  get newModel(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class ManagerInfoSet extends ethereum.Event {
  get params(): ManagerInfoSet__Params {
    return new ManagerInfoSet__Params(this);
  }
}

export class ManagerInfoSet__Params {
  _event: ManagerInfoSet;

  constructor(event: ManagerInfoSet) {
    this._event = event;
  }

  get manager(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get ipfsHash(): Bytes {
    return this._event.parameters[1].value.toBytes();
  }
}

export class MaxInactivePeriodSet extends ethereum.Event {
  get params(): MaxInactivePeriodSet__Params {
    return new MaxInactivePeriodSet__Params(this);
  }
}

export class MaxInactivePeriodSet__Params {
  _event: MaxInactivePeriodSet;

  constructor(event: MaxInactivePeriodSet) {
    this._event = event;
  }

  get period(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class OwnershipTransferred extends ethereum.Event {
  get params(): OwnershipTransferred__Params {
    return new OwnershipTransferred__Params(this);
  }
}

export class OwnershipTransferred__Params {
  _event: OwnershipTransferred;

  constructor(event: OwnershipTransferred) {
    this._event = event;
  }

  get previousOwner(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get newOwner(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PeriodToStartAuctionSet extends ethereum.Event {
  get params(): PeriodToStartAuctionSet__Params {
    return new PeriodToStartAuctionSet__Params(this);
  }
}

export class PeriodToStartAuctionSet__Params {
  _event: PeriodToStartAuctionSet;

  constructor(event: PeriodToStartAuctionSet) {
    this._event = event;
  }

  get period(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PoolBeaconSet extends ethereum.Event {
  get params(): PoolBeaconSet__Params {
    return new PoolBeaconSet__Params(this);
  }
}

export class PoolBeaconSet__Params {
  _event: PoolBeaconSet;

  constructor(event: PoolBeaconSet) {
    this._event = event;
  }

  get newPoolBeacon(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class PoolClosed extends ethereum.Event {
  get params(): PoolClosed__Params {
    return new PoolClosed__Params(this);
  }
}

export class PoolClosed__Params {
  _event: PoolClosed;

  constructor(event: PoolClosed) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get manager(): Address {
    return this._event.parameters[1].value.toAddress();
  }
}

export class PoolCreated extends ethereum.Event {
  get params(): PoolCreated__Params {
    return new PoolCreated__Params(this);
  }
}

export class PoolCreated__Params {
  _event: PoolCreated;

  constructor(event: PoolCreated) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get manager(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get currency(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class PoolRewardPerSecondSet extends ethereum.Event {
  get params(): PoolRewardPerSecondSet__Params {
    return new PoolRewardPerSecondSet__Params(this);
  }
}

export class PoolRewardPerSecondSet__Params {
  _event: PoolRewardPerSecondSet;

  constructor(event: PoolRewardPerSecondSet) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get rewardPerSecond(): BigInt {
    return this._event.parameters[1].value.toBigInt();
  }
}

export class PoolTransferred extends ethereum.Event {
  get params(): PoolTransferred__Params {
    return new PoolTransferred__Params(this);
  }
}

export class PoolTransferred__Params {
  _event: PoolTransferred;

  constructor(event: PoolTransferred) {
    this._event = event;
  }

  get pool(): Address {
    return this._event.parameters[0].value.toAddress();
  }

  get oldManager(): Address {
    return this._event.parameters[1].value.toAddress();
  }

  get newManager(): Address {
    return this._event.parameters[2].value.toAddress();
  }
}

export class ProvisionalDefaultUtilizationSet extends ethereum.Event {
  get params(): ProvisionalDefaultUtilizationSet__Params {
    return new ProvisionalDefaultUtilizationSet__Params(this);
  }
}

export class ProvisionalDefaultUtilizationSet__Params {
  _event: ProvisionalDefaultUtilizationSet;

  constructor(event: ProvisionalDefaultUtilizationSet) {
    this._event = event;
  }

  get utilization(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class ReserveFactorSet extends ethereum.Event {
  get params(): ReserveFactorSet__Params {
    return new ReserveFactorSet__Params(this);
  }
}

export class ReserveFactorSet__Params {
  _event: ReserveFactorSet;

  constructor(event: ReserveFactorSet) {
    this._event = event;
  }

  get factor(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class TreasurySet extends ethereum.Event {
  get params(): TreasurySet__Params {
    return new TreasurySet__Params(this);
  }
}

export class TreasurySet__Params {
  _event: TreasurySet;

  constructor(event: TreasurySet) {
    this._event = event;
  }

  get newTreasury(): Address {
    return this._event.parameters[0].value.toAddress();
  }
}

export class WarningGracePeriodSet extends ethereum.Event {
  get params(): WarningGracePeriodSet__Params {
    return new WarningGracePeriodSet__Params(this);
  }
}

export class WarningGracePeriodSet__Params {
  _event: WarningGracePeriodSet;

  constructor(event: WarningGracePeriodSet) {
    this._event = event;
  }

  get period(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class WarningUtilizationSet extends ethereum.Event {
  get params(): WarningUtilizationSet__Params {
    return new WarningUtilizationSet__Params(this);
  }
}

export class WarningUtilizationSet__Params {
  _event: WarningUtilizationSet;

  constructor(event: WarningUtilizationSet) {
    this._event = event;
  }

  get utilization(): BigInt {
    return this._event.parameters[0].value.toBigInt();
  }
}

export class PoolFactory__managerInfoResult {
  value0: Address;
  value1: Address;
  value2: Address;
  value3: BigInt;
  value4: BigInt;
  value5: Bytes;
  value6: string;

  constructor(
    value0: Address,
    value1: Address,
    value2: Address,
    value3: BigInt,
    value4: BigInt,
    value5: Bytes,
    value6: string
  ) {
    this.value0 = value0;
    this.value1 = value1;
    this.value2 = value2;
    this.value3 = value3;
    this.value4 = value4;
    this.value5 = value5;
    this.value6 = value6;
  }

  toMap(): TypedMap<string, ethereum.Value> {
    let map = new TypedMap<string, ethereum.Value>();
    map.set("value0", ethereum.Value.fromAddress(this.value0));
    map.set("value1", ethereum.Value.fromAddress(this.value1));
    map.set("value2", ethereum.Value.fromAddress(this.value2));
    map.set("value3", ethereum.Value.fromUnsignedBigInt(this.value3));
    map.set("value4", ethereum.Value.fromUnsignedBigInt(this.value4));
    map.set("value5", ethereum.Value.fromFixedBytes(this.value5));
    map.set("value6", ethereum.Value.fromString(this.value6));
    return map;
  }
}

export class PoolFactory extends ethereum.SmartContract {
  static bind(address: Address): PoolFactory {
    return new PoolFactory("PoolFactory", address);
  }

  auction(): Address {
    let result = super.call("auction", "auction():(address)", []);

    return result[0].toAddress();
  }

  try_auction(): ethereum.CallResult<Address> {
    let result = super.tryCall("auction", "auction():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  currencyAllowed(param0: Address): boolean {
    let result = super.call(
      "currencyAllowed",
      "currencyAllowed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );

    return result[0].toBoolean();
  }

  try_currencyAllowed(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "currencyAllowed",
      "currencyAllowed(address):(bool)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  flashGovernor(): Address {
    let result = super.call("flashGovernor", "flashGovernor():(address)", []);

    return result[0].toAddress();
  }

  try_flashGovernor(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "flashGovernor",
      "flashGovernor():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  getPoolSymbol(currency: Address, manager: Address): string {
    let result = super.call(
      "getPoolSymbol",
      "getPoolSymbol(address,address):(string)",
      [
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromAddress(manager)
      ]
    );

    return result[0].toString();
  }

  try_getPoolSymbol(
    currency: Address,
    manager: Address
  ): ethereum.CallResult<string> {
    let result = super.tryCall(
      "getPoolSymbol",
      "getPoolSymbol(address,address):(string)",
      [
        ethereum.Value.fromAddress(currency),
        ethereum.Value.fromAddress(manager)
      ]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toString());
  }

  insuranceFactor(): BigInt {
    let result = super.call(
      "insuranceFactor",
      "insuranceFactor():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_insuranceFactor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "insuranceFactor",
      "insuranceFactor():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  interestRateModel(): Address {
    let result = super.call(
      "interestRateModel",
      "interestRateModel():(address)",
      []
    );

    return result[0].toAddress();
  }

  try_interestRateModel(): ethereum.CallResult<Address> {
    let result = super.tryCall(
      "interestRateModel",
      "interestRateModel():(address)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  isPool(param0: Address): boolean {
    let result = super.call("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);

    return result[0].toBoolean();
  }

  try_isPool(param0: Address): ethereum.CallResult<boolean> {
    let result = super.tryCall("isPool", "isPool(address):(bool)", [
      ethereum.Value.fromAddress(param0)
    ]);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  managerInfo(param0: Address): PoolFactory__managerInfoResult {
    let result = super.call(
      "managerInfo",
      "managerInfo(address):(address,address,address,uint32,uint256,bytes32,string)",
      [ethereum.Value.fromAddress(param0)]
    );

    return new PoolFactory__managerInfoResult(
      result[0].toAddress(),
      result[1].toAddress(),
      result[2].toAddress(),
      result[3].toBigInt(),
      result[4].toBigInt(),
      result[5].toBytes(),
      result[6].toString()
    );
  }

  try_managerInfo(
    param0: Address
  ): ethereum.CallResult<PoolFactory__managerInfoResult> {
    let result = super.tryCall(
      "managerInfo",
      "managerInfo(address):(address,address,address,uint32,uint256,bytes32,string)",
      [ethereum.Value.fromAddress(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(
      new PoolFactory__managerInfoResult(
        value[0].toAddress(),
        value[1].toAddress(),
        value[2].toAddress(),
        value[3].toBigInt(),
        value[4].toBigInt(),
        value[5].toBytes(),
        value[6].toString()
      )
    );
  }

  maxInactivePeriod(): BigInt {
    let result = super.call(
      "maxInactivePeriod",
      "maxInactivePeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_maxInactivePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "maxInactivePeriod",
      "maxInactivePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  owner(): Address {
    let result = super.call("owner", "owner():(address)", []);

    return result[0].toAddress();
  }

  try_owner(): ethereum.CallResult<Address> {
    let result = super.tryCall("owner", "owner():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  periodToStartAuction(): BigInt {
    let result = super.call(
      "periodToStartAuction",
      "periodToStartAuction():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_periodToStartAuction(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "periodToStartAuction",
      "periodToStartAuction():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  poolBeacon(): Address {
    let result = super.call("poolBeacon", "poolBeacon():(address)", []);

    return result[0].toAddress();
  }

  try_poolBeacon(): ethereum.CallResult<Address> {
    let result = super.tryCall("poolBeacon", "poolBeacon():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  provisionalDefaultUtilization(): BigInt {
    let result = super.call(
      "provisionalDefaultUtilization",
      "provisionalDefaultUtilization():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_provisionalDefaultUtilization(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "provisionalDefaultUtilization",
      "provisionalDefaultUtilization():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  rbn(): Address {
    let result = super.call("rbn", "rbn():(address)", []);

    return result[0].toAddress();
  }

  try_rbn(): ethereum.CallResult<Address> {
    let result = super.tryCall("rbn", "rbn():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  reserveFactor(): BigInt {
    let result = super.call("reserveFactor", "reserveFactor():(uint256)", []);

    return result[0].toBigInt();
  }

  try_reserveFactor(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "reserveFactor",
      "reserveFactor():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  staking(): Address {
    let result = super.call("staking", "staking():(address)", []);

    return result[0].toAddress();
  }

  try_staking(): ethereum.CallResult<Address> {
    let result = super.tryCall("staking", "staking():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  treasury(): Address {
    let result = super.call("treasury", "treasury():(address)", []);

    return result[0].toAddress();
  }

  try_treasury(): ethereum.CallResult<Address> {
    let result = super.tryCall("treasury", "treasury():(address)", []);
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toAddress());
  }

  usedManagerSymbols(param0: string): boolean {
    let result = super.call(
      "usedManagerSymbols",
      "usedManagerSymbols(string):(bool)",
      [ethereum.Value.fromString(param0)]
    );

    return result[0].toBoolean();
  }

  try_usedManagerSymbols(param0: string): ethereum.CallResult<boolean> {
    let result = super.tryCall(
      "usedManagerSymbols",
      "usedManagerSymbols(string):(bool)",
      [ethereum.Value.fromString(param0)]
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBoolean());
  }

  warningGracePeriod(): BigInt {
    let result = super.call(
      "warningGracePeriod",
      "warningGracePeriod():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_warningGracePeriod(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "warningGracePeriod",
      "warningGracePeriod():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }

  warningUtilization(): BigInt {
    let result = super.call(
      "warningUtilization",
      "warningUtilization():(uint256)",
      []
    );

    return result[0].toBigInt();
  }

  try_warningUtilization(): ethereum.CallResult<BigInt> {
    let result = super.tryCall(
      "warningUtilization",
      "warningUtilization():(uint256)",
      []
    );
    if (result.reverted) {
      return new ethereum.CallResult();
    }
    let value = result.value;
    return ethereum.CallResult.fromValue(value[0].toBigInt());
  }
}

export class BurnStakeCall extends ethereum.Call {
  get inputs(): BurnStakeCall__Inputs {
    return new BurnStakeCall__Inputs(this);
  }

  get outputs(): BurnStakeCall__Outputs {
    return new BurnStakeCall__Outputs(this);
  }
}

export class BurnStakeCall__Inputs {
  _call: BurnStakeCall;

  constructor(call: BurnStakeCall) {
    this._call = call;
  }
}

export class BurnStakeCall__Outputs {
  _call: BurnStakeCall;

  constructor(call: BurnStakeCall) {
    this._call = call;
  }
}

export class ClosePoolCall extends ethereum.Call {
  get inputs(): ClosePoolCall__Inputs {
    return new ClosePoolCall__Inputs(this);
  }

  get outputs(): ClosePoolCall__Outputs {
    return new ClosePoolCall__Outputs(this);
  }
}

export class ClosePoolCall__Inputs {
  _call: ClosePoolCall;

  constructor(call: ClosePoolCall) {
    this._call = call;
  }
}

export class ClosePoolCall__Outputs {
  _call: ClosePoolCall;

  constructor(call: ClosePoolCall) {
    this._call = call;
  }
}

export class CreatePoolCall extends ethereum.Call {
  get inputs(): CreatePoolCall__Inputs {
    return new CreatePoolCall__Inputs(this);
  }

  get outputs(): CreatePoolCall__Outputs {
    return new CreatePoolCall__Outputs(this);
  }
}

export class CreatePoolCall__Inputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class CreatePoolCall__Outputs {
  _call: CreatePoolCall;

  constructor(call: CreatePoolCall) {
    this._call = call;
  }
}

export class CreatePoolInitialCall extends ethereum.Call {
  get inputs(): CreatePoolInitialCall__Inputs {
    return new CreatePoolInitialCall__Inputs(this);
  }

  get outputs(): CreatePoolInitialCall__Outputs {
    return new CreatePoolInitialCall__Outputs(this);
  }
}

export class CreatePoolInitialCall__Inputs {
  _call: CreatePoolInitialCall;

  constructor(call: CreatePoolInitialCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get currency(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get ipfsHash(): Bytes {
    return this._call.inputValues[2].value.toBytes();
  }

  get managerSymbol(): string {
    return this._call.inputValues[3].value.toString();
  }
}

export class CreatePoolInitialCall__Outputs {
  _call: CreatePoolInitialCall;

  constructor(call: CreatePoolInitialCall) {
    this._call = call;
  }
}

export class InitializeCall extends ethereum.Call {
  get inputs(): InitializeCall__Inputs {
    return new InitializeCall__Inputs(this);
  }

  get outputs(): InitializeCall__Outputs {
    return new InitializeCall__Outputs(this);
  }
}

export class InitializeCall__Inputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }

  get rbn_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get staking_(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get poolBeacon_(): Address {
    return this._call.inputValues[2].value.toAddress();
  }

  get interestRateModel_(): Address {
    return this._call.inputValues[3].value.toAddress();
  }

  get auction_(): Address {
    return this._call.inputValues[4].value.toAddress();
  }
}

export class InitializeCall__Outputs {
  _call: InitializeCall;

  constructor(call: InitializeCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall extends ethereum.Call {
  get inputs(): RenounceOwnershipCall__Inputs {
    return new RenounceOwnershipCall__Inputs(this);
  }

  get outputs(): RenounceOwnershipCall__Outputs {
    return new RenounceOwnershipCall__Outputs(this);
  }
}

export class RenounceOwnershipCall__Inputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class RenounceOwnershipCall__Outputs {
  _call: RenounceOwnershipCall;

  constructor(call: RenounceOwnershipCall) {
    this._call = call;
  }
}

export class SetCurrencyCall extends ethereum.Call {
  get inputs(): SetCurrencyCall__Inputs {
    return new SetCurrencyCall__Inputs(this);
  }

  get outputs(): SetCurrencyCall__Outputs {
    return new SetCurrencyCall__Outputs(this);
  }
}

export class SetCurrencyCall__Inputs {
  _call: SetCurrencyCall;

  constructor(call: SetCurrencyCall) {
    this._call = call;
  }

  get currency(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get allowed(): boolean {
    return this._call.inputValues[1].value.toBoolean();
  }
}

export class SetCurrencyCall__Outputs {
  _call: SetCurrencyCall;

  constructor(call: SetCurrencyCall) {
    this._call = call;
  }
}

export class SetInsuranceFactorCall extends ethereum.Call {
  get inputs(): SetInsuranceFactorCall__Inputs {
    return new SetInsuranceFactorCall__Inputs(this);
  }

  get outputs(): SetInsuranceFactorCall__Outputs {
    return new SetInsuranceFactorCall__Outputs(this);
  }
}

export class SetInsuranceFactorCall__Inputs {
  _call: SetInsuranceFactorCall;

  constructor(call: SetInsuranceFactorCall) {
    this._call = call;
  }

  get insuranceFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetInsuranceFactorCall__Outputs {
  _call: SetInsuranceFactorCall;

  constructor(call: SetInsuranceFactorCall) {
    this._call = call;
  }
}

export class SetInterestRateModelCall extends ethereum.Call {
  get inputs(): SetInterestRateModelCall__Inputs {
    return new SetInterestRateModelCall__Inputs(this);
  }

  get outputs(): SetInterestRateModelCall__Outputs {
    return new SetInterestRateModelCall__Outputs(this);
  }
}

export class SetInterestRateModelCall__Inputs {
  _call: SetInterestRateModelCall;

  constructor(call: SetInterestRateModelCall) {
    this._call = call;
  }

  get interestRateModel_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetInterestRateModelCall__Outputs {
  _call: SetInterestRateModelCall;

  constructor(call: SetInterestRateModelCall) {
    this._call = call;
  }
}

export class SetManagerInfoCall extends ethereum.Call {
  get inputs(): SetManagerInfoCall__Inputs {
    return new SetManagerInfoCall__Inputs(this);
  }

  get outputs(): SetManagerInfoCall__Outputs {
    return new SetManagerInfoCall__Outputs(this);
  }
}

export class SetManagerInfoCall__Inputs {
  _call: SetManagerInfoCall;

  constructor(call: SetManagerInfoCall) {
    this._call = call;
  }

  get manager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get ipfsHash(): Bytes {
    return this._call.inputValues[1].value.toBytes();
  }
}

export class SetManagerInfoCall__Outputs {
  _call: SetManagerInfoCall;

  constructor(call: SetManagerInfoCall) {
    this._call = call;
  }
}

export class SetMaxInactivePeriodCall extends ethereum.Call {
  get inputs(): SetMaxInactivePeriodCall__Inputs {
    return new SetMaxInactivePeriodCall__Inputs(this);
  }

  get outputs(): SetMaxInactivePeriodCall__Outputs {
    return new SetMaxInactivePeriodCall__Outputs(this);
  }
}

export class SetMaxInactivePeriodCall__Inputs {
  _call: SetMaxInactivePeriodCall;

  constructor(call: SetMaxInactivePeriodCall) {
    this._call = call;
  }

  get maxInactivePeriod_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetMaxInactivePeriodCall__Outputs {
  _call: SetMaxInactivePeriodCall;

  constructor(call: SetMaxInactivePeriodCall) {
    this._call = call;
  }
}

export class SetPeriodToStartAuctionCall extends ethereum.Call {
  get inputs(): SetPeriodToStartAuctionCall__Inputs {
    return new SetPeriodToStartAuctionCall__Inputs(this);
  }

  get outputs(): SetPeriodToStartAuctionCall__Outputs {
    return new SetPeriodToStartAuctionCall__Outputs(this);
  }
}

export class SetPeriodToStartAuctionCall__Inputs {
  _call: SetPeriodToStartAuctionCall;

  constructor(call: SetPeriodToStartAuctionCall) {
    this._call = call;
  }

  get periodToStartAuction_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetPeriodToStartAuctionCall__Outputs {
  _call: SetPeriodToStartAuctionCall;

  constructor(call: SetPeriodToStartAuctionCall) {
    this._call = call;
  }
}

export class SetPoolBeaconCall extends ethereum.Call {
  get inputs(): SetPoolBeaconCall__Inputs {
    return new SetPoolBeaconCall__Inputs(this);
  }

  get outputs(): SetPoolBeaconCall__Outputs {
    return new SetPoolBeaconCall__Outputs(this);
  }
}

export class SetPoolBeaconCall__Inputs {
  _call: SetPoolBeaconCall;

  constructor(call: SetPoolBeaconCall) {
    this._call = call;
  }

  get poolBeacon_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetPoolBeaconCall__Outputs {
  _call: SetPoolBeaconCall;

  constructor(call: SetPoolBeaconCall) {
    this._call = call;
  }
}

export class SetPoolRewardPerSecondCall extends ethereum.Call {
  get inputs(): SetPoolRewardPerSecondCall__Inputs {
    return new SetPoolRewardPerSecondCall__Inputs(this);
  }

  get outputs(): SetPoolRewardPerSecondCall__Outputs {
    return new SetPoolRewardPerSecondCall__Outputs(this);
  }
}

export class SetPoolRewardPerSecondCall__Inputs {
  _call: SetPoolRewardPerSecondCall;

  constructor(call: SetPoolRewardPerSecondCall) {
    this._call = call;
  }

  get pool(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get rewardPerSecond(): BigInt {
    return this._call.inputValues[1].value.toBigInt();
  }
}

export class SetPoolRewardPerSecondCall__Outputs {
  _call: SetPoolRewardPerSecondCall;

  constructor(call: SetPoolRewardPerSecondCall) {
    this._call = call;
  }
}

export class SetProvisionalDefaultUtilizationCall extends ethereum.Call {
  get inputs(): SetProvisionalDefaultUtilizationCall__Inputs {
    return new SetProvisionalDefaultUtilizationCall__Inputs(this);
  }

  get outputs(): SetProvisionalDefaultUtilizationCall__Outputs {
    return new SetProvisionalDefaultUtilizationCall__Outputs(this);
  }
}

export class SetProvisionalDefaultUtilizationCall__Inputs {
  _call: SetProvisionalDefaultUtilizationCall;

  constructor(call: SetProvisionalDefaultUtilizationCall) {
    this._call = call;
  }

  get provisionalDefaultUtilization_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetProvisionalDefaultUtilizationCall__Outputs {
  _call: SetProvisionalDefaultUtilizationCall;

  constructor(call: SetProvisionalDefaultUtilizationCall) {
    this._call = call;
  }
}

export class SetReserveFactorCall extends ethereum.Call {
  get inputs(): SetReserveFactorCall__Inputs {
    return new SetReserveFactorCall__Inputs(this);
  }

  get outputs(): SetReserveFactorCall__Outputs {
    return new SetReserveFactorCall__Outputs(this);
  }
}

export class SetReserveFactorCall__Inputs {
  _call: SetReserveFactorCall;

  constructor(call: SetReserveFactorCall) {
    this._call = call;
  }

  get reserveFactor_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetReserveFactorCall__Outputs {
  _call: SetReserveFactorCall;

  constructor(call: SetReserveFactorCall) {
    this._call = call;
  }
}

export class SetTreasuryCall extends ethereum.Call {
  get inputs(): SetTreasuryCall__Inputs {
    return new SetTreasuryCall__Inputs(this);
  }

  get outputs(): SetTreasuryCall__Outputs {
    return new SetTreasuryCall__Outputs(this);
  }
}

export class SetTreasuryCall__Inputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }

  get treasury_(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class SetTreasuryCall__Outputs {
  _call: SetTreasuryCall;

  constructor(call: SetTreasuryCall) {
    this._call = call;
  }
}

export class SetWarningGracePeriodCall extends ethereum.Call {
  get inputs(): SetWarningGracePeriodCall__Inputs {
    return new SetWarningGracePeriodCall__Inputs(this);
  }

  get outputs(): SetWarningGracePeriodCall__Outputs {
    return new SetWarningGracePeriodCall__Outputs(this);
  }
}

export class SetWarningGracePeriodCall__Inputs {
  _call: SetWarningGracePeriodCall;

  constructor(call: SetWarningGracePeriodCall) {
    this._call = call;
  }

  get warningGracePeriod_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWarningGracePeriodCall__Outputs {
  _call: SetWarningGracePeriodCall;

  constructor(call: SetWarningGracePeriodCall) {
    this._call = call;
  }
}

export class SetWarningUtilizationCall extends ethereum.Call {
  get inputs(): SetWarningUtilizationCall__Inputs {
    return new SetWarningUtilizationCall__Inputs(this);
  }

  get outputs(): SetWarningUtilizationCall__Outputs {
    return new SetWarningUtilizationCall__Outputs(this);
  }
}

export class SetWarningUtilizationCall__Inputs {
  _call: SetWarningUtilizationCall;

  constructor(call: SetWarningUtilizationCall) {
    this._call = call;
  }

  get warningUtilization_(): BigInt {
    return this._call.inputValues[0].value.toBigInt();
  }
}

export class SetWarningUtilizationCall__Outputs {
  _call: SetWarningUtilizationCall;

  constructor(call: SetWarningUtilizationCall) {
    this._call = call;
  }
}

export class SweepCall extends ethereum.Call {
  get inputs(): SweepCall__Inputs {
    return new SweepCall__Inputs(this);
  }

  get outputs(): SweepCall__Outputs {
    return new SweepCall__Outputs(this);
  }
}

export class SweepCall__Inputs {
  _call: SweepCall;

  constructor(call: SweepCall) {
    this._call = call;
  }

  get token(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get to(): Address {
    return this._call.inputValues[1].value.toAddress();
  }

  get amount(): BigInt {
    return this._call.inputValues[2].value.toBigInt();
  }
}

export class SweepCall__Outputs {
  _call: SweepCall;

  constructor(call: SweepCall) {
    this._call = call;
  }
}

export class TransferOwnershipCall extends ethereum.Call {
  get inputs(): TransferOwnershipCall__Inputs {
    return new TransferOwnershipCall__Inputs(this);
  }

  get outputs(): TransferOwnershipCall__Outputs {
    return new TransferOwnershipCall__Outputs(this);
  }
}

export class TransferOwnershipCall__Inputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }

  get newOwner(): Address {
    return this._call.inputValues[0].value.toAddress();
  }
}

export class TransferOwnershipCall__Outputs {
  _call: TransferOwnershipCall;

  constructor(call: TransferOwnershipCall) {
    this._call = call;
  }
}

export class TransferPoolCall extends ethereum.Call {
  get inputs(): TransferPoolCall__Inputs {
    return new TransferPoolCall__Inputs(this);
  }

  get outputs(): TransferPoolCall__Outputs {
    return new TransferPoolCall__Outputs(this);
  }
}

export class TransferPoolCall__Inputs {
  _call: TransferPoolCall;

  constructor(call: TransferPoolCall) {
    this._call = call;
  }

  get oldManager(): Address {
    return this._call.inputValues[0].value.toAddress();
  }

  get newManager(): Address {
    return this._call.inputValues[1].value.toAddress();
  }
}

export class TransferPoolCall__Outputs {
  _call: TransferPoolCall;

  constructor(call: TransferPoolCall) {
    this._call = call;
  }
}

export class WithdrawRewardCall extends ethereum.Call {
  get inputs(): WithdrawRewardCall__Inputs {
    return new WithdrawRewardCall__Inputs(this);
  }

  get outputs(): WithdrawRewardCall__Outputs {
    return new WithdrawRewardCall__Outputs(this);
  }
}

export class WithdrawRewardCall__Inputs {
  _call: WithdrawRewardCall;

  constructor(call: WithdrawRewardCall) {
    this._call = call;
  }

  get pools(): Array<Address> {
    return this._call.inputValues[0].value.toAddressArray();
  }
}

export class WithdrawRewardCall__Outputs {
  _call: WithdrawRewardCall;

  constructor(call: WithdrawRewardCall) {
    this._call = call;
  }
}
